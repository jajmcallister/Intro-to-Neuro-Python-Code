import numpy as np
import matplotlib.pyplot as plt
import math

t_max = 150e-3   # second
dt = 1e-3        # second
tau = 20e-3      # second
el = -60e-3      # millivolt
vr = -70e-3      # millivolt
vth = -50e-3     # millivolt
r = 100e6        # ohm
i_mean = 25e-11  # ampere

np.random.seed(2020)

# initialise step-end
step_end = int(t_max/dt)
n=50
t_range = np.linspace(0, t_max, num=step_end)
v_n = el * np.ones([n, step_end])

random_num = 2*np.random.random([n, step_end])-1

i = i_mean * (1 + 0.1 * math.sqrt(t_max / dt) * random_num)

for step in range(1, step_end):

    v_n[:, step] = v_n[:, step-1] + dt*(el-v_n[:,step-1]+r*i[:, step])/tau

v_mean = np.mean(v_n, axis=0)
v_std = np.std(v_n, axis=0)

with plt.xkcd():
    plt.figure()
    plt.title("multiple $V_m$")
    plt.xlabel("Time (s)")
    plt.ylabel("$V_m$ (V)")


    plt.plot(t_range, v_n.T, 'k', alpha=0.3)
    plt.plot(t_range, v_n[-1], 'k', alpha=0.3, label='V(t)')
    plt.plot(t_range, v_mean, 'C0', alpha=0.8, label='mean')
    plt.plot(t_range, v_mean+v_std, 'C7', alpha=0.8)
    plt.plot(t_range, v_mean-v_std, 'C7', alpha=0.8, label='mean $\pm$ std')

plt.legend()
plt.show()
